name: Check Build Environment

on:
  workflow_dispatch:

env:
    GCP_CREDENTIALS_JSON: ${{ secrets.GCP_CREDENTIALS_JSON}}
 
jobs:
  validate:
    name: Check Environment
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
            install: true

      - name: Setup Packer
        uses: hashicorp/setup-packer@v2

      - name: Validate Build Environment
        run: |
            gcloud --version
            terraform --version
            docker --version
            packer --version
            echo $GCP_CREDENTIALS_JSON > credentials.json
            echo "NOTE: Validating credentials.json and test the gcloud command"

            # Check if the file "./credentials.json" exists
            if [[ ! -f "./credentials.json" ]]; then
                echo "ERROR: The file './credentials.json' does not exist." >&2
                exit 1
            fi

            gcloud auth activate-service-account --key-file="./credentials.json"

            # Check for Terraform backend configuration in the 01-gar directory.
            backend=$(grep -r 'backend ' ./01-gar/*.tf || true)
            if [ -z "$backend" ]; then
              # Print an error message if no backend configuration is found.
              echo "ERROR: No terraform backend configuration is defined for 01-gar."
              # Exit the script with an error code to fail the workflow.
              exit 1
            fi

            # Check for Terraform backend configuration in the 03-cloudrun directory.
            backend=$(grep -r 'backend ' ./03-cloudrun/*.tf || true)
            if [ -z "$backend" ]; then
              # Print an error message if no backend configuration is found.
              echo "ERROR: No terraform backend configuration is defined for 03-cloudrun."
              # Exit the script with an error code to fail the workflow.
              exit 1
            fi

            # Inform the user that all required backend files exist.
            echo "NOTE: All required backend files exist."
