name: Build Solution

on:
  workflow_dispatch:

env:
    GCP_CREDENTIALS_JSON: ${{ secrets.GCP_CREDENTIALS_JSON }}

jobs:
  deploy_phase_1:
    name: Build ACR Instance
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Apply Terraform
        run: |
          echo $GCP_CREDENTIALS_JSON > credentials.json
          cd "01-gar"
          echo "NOTE: Building GAR Instance."

          backend=$(grep -r 'backend ' *.tf || true)
          if [ -z "$backend" ]; then
              echo "ERROR: No terraform backend configuration is defined."
              exit 1
          fi

          terraform init
          terraform apply -auto-approve

          cd ..

  deploy_phase_2:
    name: Build Flask Container
    needs: deploy_phase_1
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
            install: true

      - name: Build Flask Container
        run: |
            echo $GCP_CREDENTIALS_JSON > credentials.json
            export GOOGLE_APPLICATION_CREDENTIALS="$(pwd)/credentials.json"
            cd "02-docker"
            echo "NOTE: Building flask container with Docker."

            gcloud auth configure-docker us-central1-docker.pkg.dev -q 
            project_id=$(jq -r '.project_id' "../credentials.json")
            GCR_IMAGE=us-central1-docker.pkg.dev/$project_id/flask-repository/flask-app:flask-app-rc1
            docker build -t $GCR_IMAGE . --push
            cd ..

  deploy_phase_3:
    name: Build Cloud Run Instance
    needs: deploy_phase_2
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Apply Terraform
        run: |
            cd 03-cloudrun
            echo "NOTE: Building cloud run instance and deploying Flask container."

            backend=$(grep -r 'backend ' *.tf || true)
            if [ -z "$backend" ]; then
              echo "ERROR: No terraform backend configuration is defined."
              exit 1
            fi

            terraform init
            terraform apply -auto-approve
            cd ..

  validate:
    name: Validate Solution
    needs: deploy_phase_3
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Validate Solution
        run: |
          echo "Validating solution"